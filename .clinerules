# Cline Rules - ERP Cortinas Aymara

## üìã Reglas de Desarrollo

### 1. Consultar Memory Bank Primero
- Siempre le√© primero los archivos en `docs/memory-bank/` antes de proponer cambios
- Revis√° especialmente:
  - `PROJECT_BRIEF.md` para contexto del proyecto
  - `ARCHITECTURE.md` para entender la estructura
  - `CONVENTIONS.md` para seguir est√°ndares de c√≥digo
  - `API_CONTRACTS.md` para endpoints existentes
  - `DECISIONS.md` para decisiones arquitect√≥nicas previas

### 2. Usar Contexto Existente
- No reanalices todo el repositorio si falta contexto
- Us√° `TASK_LOG.md` para entender el historial de desarrollo
- Us√° `DECISIONS.md` para conocer decisiones previas y su justificaci√≥n
- Consult√° `RUNBOOK.md` para comandos de setup y ejecuci√≥n

### 3. Respetar Convenciones
- Segu√≠ estrictamente las convenciones definidas en `CONVENTIONS.md`:
  - Nombres de archivos en camelCase para componentes
  - Estructura modular del backend
  - Patrones de CSS Modules
  - Convenciones de naming para variables y funciones

### 4. Documentar Autom√°ticamente
- **Nuevas decisiones**: Agreg√° autom√°ticamente a `DECISIONS.md` como nuevos ADRs
- **Cambios de tareas**: Actualiz√° `TASK_LOG.md` con nuevas tareas completadas
- **Nuevos endpoints**: Document√° en `API_CONTRACTS.md`
- **Cambios arquitect√≥nicos**: Actualiz√° `ARCHITECTURE.md` si es necesario

### 5. Flujo de Trabajo Recomendado
1. Leer memory-bank relevante
2. Entender el contexto actual
3. Proponer cambios siguiendo convenciones
4. Implementar cambios
5. Actualizar documentaci√≥n autom√°ticamente

### 6. Archivos Cr√≠ticos a Consultar
- `docs/memory-bank/CONVENTIONS.md` - Antes de crear/modificar c√≥digo
- `docs/memory-bank/DECISIONS.md` - Antes de tomar decisiones arquitect√≥nicas
- `docs/memory-bank/API_CONTRACTS.md` - Antes de crear/modificar endpoints
- `docs/memory-bank/TASK_LOG.md` - Para entender el estado actual del proyecto

### 7. Patrones a Seguir
- **Backend**: Controller ‚Üí Service ‚Üí Repository pattern
- **Frontend**: Componentes funcionales con hooks
- **Estilos**: CSS Modules con naming BEM-like
- **APIs**: REST con formato de respuesta consistente
- **Seguridad**: Cifrado AES-256-GCM para datos sensibles

### 8. Evitar
- window.alert (usar sistema de notificaciones custom)
- Estado global innecesario (fetch directo desde componentes)
- Reanalizar todo el repo sin consultar memory-bank
- Cambios que rompan convenciones establecidas

---
*Estas reglas aseguran consistencia y eficiencia en el desarrollo del ERP Cortinas Aymara*
